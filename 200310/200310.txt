-배열

배열은 처음부터 크기가 정해져있는 상태에서 사용을 해야 함
선언할 때는 크기를 지정해야 함
c언어 정수값으로 지정을 해야함
java  변수가 들어가도됨(사이즈가 동적임)

ex.String name = "홍길동";
call stack - name이라는 공간 생성
heap  - name에 저장된 실제 데이터인 홍길동 저장

heap에 생성된 애들은 동적.
call stack에 생성된 애들은 정적.

string생기는 것처럼 배열도 생김?



-메소드
뜻을 나타내면 방법
원리로 따지면 함수가 있는데
어떤 값을 넣게되면 처리가 돼서 원하는 어떤 결과가 나옴
어떤일을 해결해주기 위한 방법

함수 - 일괄처리
메소드 - 객체지향
*함수가 객체지향 안에 들어가 있으면 메소드라고 함

클래스 안에서 함수를 만들어놓으면 메소드라고 함

특정 기능만 담당하도록 잘라놓는 역할
객체는 변수(상태), 메소드(방법(상태값 활용할 수 있는 방법)로 만들어져있음)

바깥쪽 영역에 변수를 만들 수 있음(선언해주는 변수와는 다름)
한 클래스 안에는 원하는 만큼의 메소드를 만들 수 있음



import java.util.Scanner;

public class Main {


	//여기에 메소드 작성

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//메소드 내부에 메소드 X

	}// main method

	//여기에 메소드 작성

}

Method란
하나 또는 여러가지 기능을 묶어서 독립적으로 사용할 수 있는 프로그램 구성 단위.(모듈이라고도 합니다.)
입력값(파라미터)을 넣어주면 해당 기능을 처리하고 출력값을 되돌려 준다(반환한다.)
CPU 

메소드 종류
1. 파라미터와 반환값이 두가지 전부 다 존재하는 메소드
2. 파라미터는 존재하나 반환값이 없는 메소드
3. 파라미터는 없으나 반환값은 존재하는 메소드
4. 둘 다 없는 메소드

메소드 작성 형식
자료형 메소드이름(매개 변수1, 매개 변수2, ...){ ... }


특수문자는 _, $만 사용 가능, 2개 이상 단어 조합시 첫번째 글자는 대문자
클래스이름 - 첫글자 대문자, 상수 - 모든 글자 대문자




call stack 처음 시작하자마자 부르는 것이 main
메소드가 호출될 때 생겼다 없어졌다 하는 내용
